#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp14DBproject
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="project")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBranch(Branch instance);
    partial void UpdateBranch(Branch instance);
    partial void DeleteBranch(Branch instance);
    partial void InsertCar(Car instance);
    partial void UpdateCar(Car instance);
    partial void DeleteCar(Car instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::WindowsFormsApp14DBproject.Properties.Settings.Default.projectConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Branch> Branches
		{
			get
			{
				return this.GetTable<Branch>();
			}
		}
		
		public System.Data.Linq.Table<Car> Cars
		{
			get
			{
				return this.GetTable<Car>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
		
		public System.Data.Linq.Table<Type> Types
		{
			get
			{
				return this.GetTable<Type>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branch")]
	public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _branchID;
		
		private string _Branch_Description;
		
		private string _Street_Address;
		
		private string _Postal_Code;
		
		private string _City;
		
		private string _Province;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbranchIDChanging(int value);
    partial void OnbranchIDChanged();
    partial void OnBranch_DescriptionChanging(string value);
    partial void OnBranch_DescriptionChanged();
    partial void OnStreet_AddressChanging(string value);
    partial void OnStreet_AddressChanged();
    partial void OnPostal_CodeChanging(string value);
    partial void OnPostal_CodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnProvinceChanging(string value);
    partial void OnProvinceChanged();
    #endregion
		
		public Branch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int branchID
		{
			get
			{
				return this._branchID;
			}
			set
			{
				if ((this._branchID != value))
				{
					this.OnbranchIDChanging(value);
					this.SendPropertyChanging();
					this._branchID = value;
					this.SendPropertyChanged("branchID");
					this.OnbranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch_Description", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string Branch_Description
		{
			get
			{
				return this._Branch_Description;
			}
			set
			{
				if ((this._Branch_Description != value))
				{
					this.OnBranch_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Branch_Description = value;
					this.SendPropertyChanged("Branch_Description");
					this.OnBranch_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street_Address", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string Street_Address
		{
			get
			{
				return this._Street_Address;
			}
			set
			{
				if ((this._Street_Address != value))
				{
					this.OnStreet_AddressChanging(value);
					this.SendPropertyChanging();
					this._Street_Address = value;
					this.SendPropertyChanged("Street_Address");
					this.OnStreet_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postal_Code", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Postal_Code
		{
			get
			{
				return this._Postal_Code;
			}
			set
			{
				if ((this._Postal_Code != value))
				{
					this.OnPostal_CodeChanging(value);
					this.SendPropertyChanging();
					this._Postal_Code = value;
					this.SendPropertyChanged("Postal_Code");
					this.OnPostal_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this.OnProvinceChanging(value);
					this.SendPropertyChanging();
					this._Province = value;
					this.SendPropertyChanged("Province");
					this.OnProvinceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cars")]
	public partial class Car : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _carID;
		
		private int _locID;
		
		private char _rented;
		
		private string _color;
		
		private string _licensePlate;
		
		private string _make;
		
		private int _typeID;
		
		private string _branchID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncarIDChanging(int value);
    partial void OncarIDChanged();
    partial void OnlocIDChanging(int value);
    partial void OnlocIDChanged();
    partial void OnrentedChanging(char value);
    partial void OnrentedChanged();
    partial void OncolorChanging(string value);
    partial void OncolorChanged();
    partial void OnlicensePlateChanging(string value);
    partial void OnlicensePlateChanged();
    partial void OnmakeChanging(string value);
    partial void OnmakeChanged();
    partial void OntypeIDChanging(int value);
    partial void OntypeIDChanged();
    partial void OnbranchIDChanging(string value);
    partial void OnbranchIDChanged();
    #endregion
		
		public Car()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int carID
		{
			get
			{
				return this._carID;
			}
			set
			{
				if ((this._carID != value))
				{
					this.OncarIDChanging(value);
					this.SendPropertyChanging();
					this._carID = value;
					this.SendPropertyChanged("carID");
					this.OncarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locID", DbType="Int NOT NULL")]
		public int locID
		{
			get
			{
				return this._locID;
			}
			set
			{
				if ((this._locID != value))
				{
					this.OnlocIDChanging(value);
					this.SendPropertyChanging();
					this._locID = value;
					this.SendPropertyChanged("locID");
					this.OnlocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rented", DbType="NChar(1) NOT NULL")]
		public char rented
		{
			get
			{
				return this._rented;
			}
			set
			{
				if ((this._rented != value))
				{
					this.OnrentedChanging(value);
					this.SendPropertyChanging();
					this._rented = value;
					this.SendPropertyChanged("rented");
					this.OnrentedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string color
		{
			get
			{
				return this._color;
			}
			set
			{
				if ((this._color != value))
				{
					this.OncolorChanging(value);
					this.SendPropertyChanging();
					this._color = value;
					this.SendPropertyChanged("color");
					this.OncolorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_licensePlate", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string licensePlate
		{
			get
			{
				return this._licensePlate;
			}
			set
			{
				if ((this._licensePlate != value))
				{
					this.OnlicensePlateChanging(value);
					this.SendPropertyChanging();
					this._licensePlate = value;
					this.SendPropertyChanged("licensePlate");
					this.OnlicensePlateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_make", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string make
		{
			get
			{
				return this._make;
			}
			set
			{
				if ((this._make != value))
				{
					this.OnmakeChanging(value);
					this.SendPropertyChanging();
					this._make = value;
					this.SendPropertyChanged("make");
					this.OnmakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="Int NOT NULL")]
		public int typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchID", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string branchID
		{
			get
			{
				return this._branchID;
			}
			set
			{
				if ((this._branchID != value))
				{
					this.OnbranchIDChanging(value);
					this.SendPropertyChanging();
					this._branchID = value;
					this.SendPropertyChanged("branchID");
					this.OnbranchIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customers")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _customerID;
		
		private string _name;
		
		private char _goldMember;
		
		private int _noRentals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncustomerIDChanging(int value);
    partial void OncustomerIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OngoldMemberChanging(char value);
    partial void OngoldMemberChanged();
    partial void OnnoRentalsChanging(int value);
    partial void OnnoRentalsChanged();
    #endregion
		
		public Customer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int customerID
		{
			get
			{
				return this._customerID;
			}
			set
			{
				if ((this._customerID != value))
				{
					this.OncustomerIDChanging(value);
					this.SendPropertyChanging();
					this._customerID = value;
					this.SendPropertyChanged("customerID");
					this.OncustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goldMember", DbType="NChar(1) NOT NULL")]
		public char goldMember
		{
			get
			{
				return this._goldMember;
			}
			set
			{
				if ((this._goldMember != value))
				{
					this.OngoldMemberChanging(value);
					this.SendPropertyChanging();
					this._goldMember = value;
					this.SendPropertyChanged("goldMember");
					this.OngoldMemberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noRentals", DbType="Int NOT NULL")]
		public int noRentals
		{
			get
			{
				return this._noRentals;
			}
			set
			{
				if ((this._noRentals != value))
				{
					this.OnnoRentalsChanging(value);
					this.SendPropertyChanging();
					this._noRentals = value;
					this.SendPropertyChanged("noRentals");
					this.OnnoRentalsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transactions")]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _transID;
		
		private System.DateTime _beginDate;
		
		private System.DateTime _endDate;
		
		private System.DateTime _rentalPeriod;
		
		private int _carID;
		
		private int _branchID;
		
		private int _cusomerID;
		
		private int _employeeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntransIDChanging(int value);
    partial void OntransIDChanged();
    partial void OnbeginDateChanging(System.DateTime value);
    partial void OnbeginDateChanged();
    partial void OnendDateChanging(System.DateTime value);
    partial void OnendDateChanged();
    partial void OnrentalPeriodChanging(System.DateTime value);
    partial void OnrentalPeriodChanged();
    partial void OncarIDChanging(int value);
    partial void OncarIDChanged();
    partial void OnbranchIDChanging(int value);
    partial void OnbranchIDChanged();
    partial void OncusomerIDChanging(int value);
    partial void OncusomerIDChanged();
    partial void OnemployeeIDChanging(int value);
    partial void OnemployeeIDChanged();
    #endregion
		
		public Transaction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int transID
		{
			get
			{
				return this._transID;
			}
			set
			{
				if ((this._transID != value))
				{
					this.OntransIDChanging(value);
					this.SendPropertyChanging();
					this._transID = value;
					this.SendPropertyChanged("transID");
					this.OntransIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_beginDate", DbType="DateTime NOT NULL")]
		public System.DateTime beginDate
		{
			get
			{
				return this._beginDate;
			}
			set
			{
				if ((this._beginDate != value))
				{
					this.OnbeginDateChanging(value);
					this.SendPropertyChanging();
					this._beginDate = value;
					this.SendPropertyChanged("beginDate");
					this.OnbeginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endDate", DbType="DateTime NOT NULL")]
		public System.DateTime endDate
		{
			get
			{
				return this._endDate;
			}
			set
			{
				if ((this._endDate != value))
				{
					this.OnendDateChanging(value);
					this.SendPropertyChanging();
					this._endDate = value;
					this.SendPropertyChanged("endDate");
					this.OnendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rentalPeriod", DbType="DateTime NOT NULL")]
		public System.DateTime rentalPeriod
		{
			get
			{
				return this._rentalPeriod;
			}
			set
			{
				if ((this._rentalPeriod != value))
				{
					this.OnrentalPeriodChanging(value);
					this.SendPropertyChanging();
					this._rentalPeriod = value;
					this.SendPropertyChanged("rentalPeriod");
					this.OnrentalPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carID", DbType="Int NOT NULL")]
		public int carID
		{
			get
			{
				return this._carID;
			}
			set
			{
				if ((this._carID != value))
				{
					this.OncarIDChanging(value);
					this.SendPropertyChanging();
					this._carID = value;
					this.SendPropertyChanged("carID");
					this.OncarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchID", DbType="Int NOT NULL")]
		public int branchID
		{
			get
			{
				return this._branchID;
			}
			set
			{
				if ((this._branchID != value))
				{
					this.OnbranchIDChanging(value);
					this.SendPropertyChanging();
					this._branchID = value;
					this.SendPropertyChanged("branchID");
					this.OnbranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusomerID", DbType="Int NOT NULL")]
		public int cusomerID
		{
			get
			{
				return this._cusomerID;
			}
			set
			{
				if ((this._cusomerID != value))
				{
					this.OncusomerIDChanging(value);
					this.SendPropertyChanging();
					this._cusomerID = value;
					this.SendPropertyChanged("cusomerID");
					this.OncusomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeID", DbType="Int NOT NULL")]
		public int employeeID
		{
			get
			{
				return this._employeeID;
			}
			set
			{
				if ((this._employeeID != value))
				{
					this.OnemployeeIDChanging(value);
					this.SendPropertyChanging();
					this._employeeID = value;
					this.SendPropertyChanged("employeeID");
					this.OnemployeeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Type")]
	public partial class Type
	{
		
		private int _ID;
		
		private string _Description;
		
		private int _Doors;
		
		private int _dRate;
		
		private int _wRate;
		
		private int _mRate;
		
		public Type()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doors", DbType="Int NOT NULL")]
		public int Doors
		{
			get
			{
				return this._Doors;
			}
			set
			{
				if ((this._Doors != value))
				{
					this._Doors = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dRate", DbType="Int NOT NULL")]
		public int dRate
		{
			get
			{
				return this._dRate;
			}
			set
			{
				if ((this._dRate != value))
				{
					this._dRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wRate", DbType="Int NOT NULL")]
		public int wRate
		{
			get
			{
				return this._wRate;
			}
			set
			{
				if ((this._wRate != value))
				{
					this._wRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mRate", DbType="Int NOT NULL")]
		public int mRate
		{
			get
			{
				return this._mRate;
			}
			set
			{
				if ((this._mRate != value))
				{
					this._mRate = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
